gitlab:
  global:
    ingress:
      configureCertmanager: false
      class: nginx
      annotations:
        nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    initialRootPassword:
      secret: gitlab-secret
      key: root-password

    psql:
      password:
        secret: gitlab-secret
      port: 5432
      username: gitlab
      database: gitlab

    redis:
      host: gitlab-redis-ha-master.gitlab.svc
      auth:
        enabled: false
      replica:
        resources:
          requests:
            cpu: 30m
            memory: 100Mi
          limits:
            memory: 100Mi

    minio:
      enabled: false
    appConfig:
      ## https://docs.gitlab.com/charts/charts/globals#cron-jobs-related-settings
      ### https://gitlab.com/gitlab-org/gitlab/blob/master/config/gitlab.yml.example#L525
      cron_jobs:
        # Flag stuck CI jobs as failed
        stuck_ci_jobs_worker:
          cron: "0 * * * *"
        # Execute scheduled triggers
        pipeline_schedule_worker:
          cron: "3-59/10 * * * *"
        # Remove expired build artifacts
        expire_build_artifacts_worker:
          cron: "*/7 * * * *"
        # Remove expired pipeline artifacts
        ci_pipelines_expire_artifacts_worker:
          cron: "*/23 * * * *"
        # Remove files from object storage
        ci_schedule_delete_objects_worker:
          cron: "*/16 * * * *"
        # Stop expired environments
        environments_auto_stop_cron_worker:
          cron: "24 * * * *"
        # Delete stopped environments
        environments_auto_delete_cron_worker:
          cron: "34 * * * *"
        # Periodically run 'git fsck' on all repositories. If started more than
        # once per hour you will have concurrent 'git fsck' jobs.
        repository_check_worker:
          cron: "20 * * * *"
        # Archive live traces which have not been archived yet
        ci_archive_traces_cron_worker:
          cron: "17 * * * *"
        # Send admin emails once a week
        admin_email_worker:
          cron: "0 0 * * 0"
        # Send emails for personal tokens which are about to expire
        personal_access_tokens_expiring_worker:
          cron: "0 1 * * *"
        # Remove outdated repository archives
        repository_archive_cache_worker:
          cron: "0 * * * *"
        # Verify custom GitLab Pages domains
        pages_domain_verification_cron_worker:
          cron: "*/15 * * * *"

        # Periodically migrate diffs from the database to external storage
        schedule_migrate_external_diffs_worker:
          cron: "15 * * * *"

        # Periodically update ci_runner_versions table with up-to-date versions and status.
        ci_runner_versions_reconciliation_worker:
          cron: "@daily"

        # Periodically clean up stale runner machines.
        ci_runners_stale_machines_cleanup_worker:
          cron: "36 * * * *"

        # Periodically queue syncing of finished pipelines from p_ci_finished_pipeline_ch_sync_events to ClickHouse
        ci_click_house_finished_pipelines_sync_worker:
          cron: "*/4 * * * *"


      lfs:
        connection:
          secret: gitlab-secret
          key: config
      artifacts:
        connection:
          secret: gitlab-secret
          key: config
      uploads:
        connection:
          secret: gitlab-secret
          key: config
      packages:
        connection:
          secret: gitlab-secret
          key: config
      externalDiffs:
        connection:
          secret: gitlab-secret
          key: config
      terraformState:
        connection:
          secret: gitlab-secret
          key: config
      dependencyProxy:
        connection:
          secret: gitlab-secret
          key: config
      backups:
        bucket: gitlab


    kas:
      enabled: false

    spamcheck:
      enabled: false

    ## https://docs.gitlab.com/charts/charts/globals#configure-registry-settings
    registry:
      certificate:
        secret: gitlab-registry-secret
        key: registry-auth.crt
      httpSecret:
        secret: gitlab-registry-httpsecret
        key: secret

    pages:
      enabled: false
      accessControl: true
      https: true
      artifactsServer: true
      localStore:
        enabled: false
        # path: /srv/gitlab/shared/pages
      objectStore:
        enabled: true
        connection:
          secret: gitlab-secret
          key: config
    smtp:
      enabled: true
      address: email-smtp.eu-west-1.amazonaws.com
      port: 587
      authentication: "login"
      starttls_auto: true
      openssl_verify_mode: "none"

    email:
      subject_suffix: "Gitlab"

  certmanager-issuer:
    email: victor.mignot-ext@randstad.fr

  certmanager:
    installCRDs: false
    install: false

  nginx-ingress:
    enabled: false

  nginx-ingress-geo:
    enabled: false

  prometheus:
    install: false

  redis:
    install: false

  postgresql:
    install: false

  registry:
    enabled: true
    storage:
      secret: gitlab-secret
      key: registrystorageconfig


  gitlab-runner:
    install: false

  gitlab:
    toolbox:
      backups:
        objectStorage:
          config:
            secret: gitlab-secret
            key: toolboxstorageconfig
        cron:
          enabled: true
          concurrencyPolicy: Replace
          failedJobsHistoryLimit: 1
          schedule: "0 22 * * *"
          successfulJobsHistoryLimit: 3
          suspend: false
          backoffLimit: 6
          restartPolicy: "OnFailure"
          resources:
            requests:
              cpu: 1
              memory: 500M
          extraArgs: --skip artifacts --skip registry

          persistence:
            enabled: true
            accessMode: ReadWriteOnce
            size: 10Gi
    ## https://docs.gitlab.com/charts/charts/gitlab/migrations
    migrations:
      enabled: true
      # from https://gitlab.com/gitlab-org/charts/gitlab/-/issues/3021#note_991350772
      annotations:
        "helm.sh/hook": "pre-install"
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      resources:
        requests:
          cpu: 1
          memory: 2Gi
        limits:
          memory: 2Gi
    ## https://docs.gitlab.com/charts/charts/gitlab/webservice
    webservice:
      deployment:
        readinessProbe:
          timeoutSeconds: 5
      shutdown:
        blackoutSeconds: 10
      resources:
        requests:
          cpu: 1
          memory: 3500Mi
        limits:
          memory: 3500Mi
      antiAffinityLabels:
        matchLabels:
          app: 'webservice'

    gitaly:
      resources:
        requests:
          cpu: 100m
          memory: 2000Mi
      annotations:
        karpenter.sh/do-not-disrupt: "true"
    ## https://docs.gitlab.com/charts/charts/gitlab/gitlab-shell
    gitlab-shell:
      resources:
        requests:
          cpu: 20m
          memory: 60Mi
    sidekiq:
      minReplicas: 2
      resources:
        requests:
          cpu: 1
          memory: 2Gi
        limits:
          memory: 2Gi
